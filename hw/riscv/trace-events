# See documentation at docs/devel/tracing.rst

# Debug Module
riscv_dm_absdata(const char *soc, const char *op, unsigned woffset, unsigned wcount, uint64_t value, uint32_t res) "%s: %s: @ %u[%u] = 0x%08" PRIx64 ": res %u"
riscv_dm_abstract_cmd(const char *soc, uint32_t addr, uint32_t inst) "%s: [%x]: %08x"
riscv_dm_access_register(const char *soc, const char *msg, const char *regname, uint32_t value) "%s: %s: %s (%x)"
riscv_dm_busy(const char *soc, bool busy) "%s: busy: %u"
riscv_dm_change_hart(const char *soc, const char *msg, unsigned hart, bool cpuhalted, bool cpurunning, bool cpustopped, bool resack) "%s: [%s] hart#%u h:%u r:%u s:%u A:%u"
riscv_dm_cs(const char *soc, bool enable) "%s: debug_cs: %u"
riscv_dm_dmstatus_read(const char *soc, uint32_t val, bool halted, bool cpuhalted, bool running, bool cpurunning, bool resack, bool cpustopped, uint32_t pc) "%s: 0x%08x H:%u(%u) R:%u(%u) A:%u S:%u @ %08x"
riscv_dm_error(const char *soc, const char *func, int line, const char *msg) "%s: %s:%d %s"
riscv_dm_halted(const char *soc, unsigned hart, uint64_t pc, const char *cause) "%s hart #%u halted @ 0x%08" PRIx64 " as %s"
riscv_dm_hart_reset(const char *msg, const char *soc, unsigned cpuindex, unsigned hartid) "%s: %s cpu:%u, hartid:%u"
riscv_dm_hart_state(const char *soc, unsigned hartsel, const char *msg) "%s: hart #%u %s"
riscv_dm_info(const char *soc, const char *func, int line, const char *msg, uint32_t val) "%s: %s:%d %s 0x%08x"
riscv_dm_progbuf(const char *soc, const char *op, unsigned woffset, uint64_t value, uint32_t res) "%s: %s: @ %u = 0x%08" PRIx64 ": res %u"
riscv_dm_reg_capture(const char *soc, const char *name, uint64_t addr, uint32_t value) "%s: %s @ %02" PRIx64 " = 0x%08x"
riscv_dm_reg_update(const char *soc, const char *name, uint32_t addr, uint32_t value, const char * op, int ret) "%s: %s @ %02x = 0x%08x, %s res %d"
riscv_dm_reset(const char *soc, const char *msg) "%s: %s"
riscv_dm_resume_hart(const char *soc, bool sstep, const char *cause) "%s: single-step: %u, cause %s"
riscv_dm_sbaddr_write(const char *soc, unsigned slot, uint32_t address) "%s: @[%u] 0x%08x"
riscv_dm_sbdata_read(const char *soc, unsigned slot, uint32_t data) "%s: @[%u] 0x%08x"
riscv_dm_sbdata_write(const char *soc, unsigned slot, uint32_t data) "%s: @[%u] 0x%08x"
riscv_dm_sysbus_data_read(const char *soc, uint64_t address, unsigned size, uint64_t val64, unsigned res) "%s: 0x%08" PRIx64 "[+%u] <- %08" PRIx64 ": res %u"
riscv_dm_sysbus_data_write(const char *soc, uint64_t address, unsigned size, uint64_t val64, unsigned res) "%s: 0x%08" PRIx64 "[+%u] -> %08" PRIx64 ": res %u"
riscv_dm_unavailable(const char *soc, bool unavail) "%s: %u"

# Debug Transport Module
riscv_dtm_dtmcs_reset(void) ""
riscv_dtm_error(const char *func, int line, const char *msg) "%s:%d %s"
riscv_dtm_info(const char *func, int line, const char *msg, uint32_t val) "%s:%d %s 0x%08x"
riscv_dtm_register_dm(unsigned count, uint64_t first, uint64_t last, bool ok) "#%u 0x%" PRIx64 "..0x%" PRIx64 ": %u"
riscv_dtm_vm_state_change(const char *name, unsigned state) "VM state: %s[%u]"
