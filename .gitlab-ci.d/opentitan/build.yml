#------------------------------------------------------------------------------
# QEMU OpenTitan CI
#
#  apk add llvm rust python3 clang16 clang16-extra-tools cmake ninja-build
#          samurai git make pkgconfig glib-dev pixman-dev zstd py3-pip
#  pip3 install pyelftools hjson
#------------------------------------------------------------------------------

build-clang:
  tags:
    - qemu_ot
  stage: build
  # build QEMU for OT platforms, ensure subprojects are cleaned up first
  # store generated header files and ninja command file as artifacts, which are
  # required to run the clang-tidy stage
  # libvhost-user.c generates sign-compare warnings with clang, so disable
  # warning-as-error
  # the alternative would be to build here with GCC, then rebuild everything
  # with clang in clang-tidy stage, as meson generates different, incompatible
  # warning list between GCC and clang...
  script:
    - rm -rf build
    - git clean -dffx subprojects
    - mkdir build
    - cd build
    - ../configure --cc=clang-16 --disable-werror $QEMU_BUILD_OPTS
        --target-list=riscv32-softmmu,riscv64-softmmu,x86_64-linux-user
    - ninja
    - ninja qemu-img
    - strip qemu-system-riscv32 qemu-img
    - ../scripts/opentitan/swexit.py -t earlgrey -o exit_eg.bin
    - ../scripts/opentitan/swexit.py -t darjeeling -o exit_dj.bin
  artifacts:
    public: false
    expire_in: 1 hour
    name: "qemu-ot"
    paths:
      - subprojects/libtomcrypt/src/headers/*.h
      - build/*.h
      - build/qapi/*.h
      - build/trace/*.h
      - build/compile_commands.json
      - build/qemu-system-riscv32
      - build/qemu-img
      - build/exit_*.bin

build-gcc:
  tags:
    - qemu_ot
  stage: build
  # build QEMU for OT platforms, ensure subprojects are cleaned up first
  # build with GCC to may need different warnings
  script:
    - rm -rf build-gcc
    - mkdir build-gcc
    - cd build-gcc
    - ../configure --cc=gcc $QEMU_BUILD_OPTS --target-list=riscv32-softmmu,riscv64-softmmu
    - ninja

format:
  tags:
    - qemu_ot
  stage: build
  script:
    - scripts/opentitan/ot-format.sh --ci -i
    - git status -s
    - test $(git status -s | wc -l) -eq 0

tidy:
  tags:
    - qemu_ot
  stage: build
  needs: ["build-clang"]
  script:
    - scripts/opentitan/ot-tidy.sh --ci -p build
